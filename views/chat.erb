
<h3>Hello <strong><%= @user %></strong>!</h3>

<div id="dump"></div>

<hr>

<label for="message">MESSAGE: </label>
<input id="message" type="text" name="message">
<input id="send_message" class="btn btn-sm btn-primary" type="submit">

<hr>

<a href='/'>Go Back to Home</a>


<script>
	var appState = {
		newCSVLength: 0,
		oldCSVLength: 0,
		current_data: 'not set',
		count: 0

	}
	
	// Read CSV File first and Setup
	readAndDisplayFromCSV();

	// Setup
	$('#message').focus();
	$('#message').select();

	// Send Message Functions
	$('#message').keypress(function (e) {
	  if (e.which == 13) {
		postToCSV($('#message').val());
	    $('#message').val('');
	    return false;    //<---- Add this line
	  }
	});

	$("#send_message").click(function(){
		postToCSV($('#message').val());
		$('#message').val('');
		return false;
	});


	// Check csv for new data
	setInterval(function(){ readAndDisplayFromCSV(); }, 1000);

	function readAndDisplayFromCSV() {
		$.ajax({
		  url: '/messages.csv',
		  dataType: 'text',
		}).done(function(d){
			// set current data to array
			appState.current_data = parseCSV(d);
			
			console.log('STATUS=> reading csv - CDL: ' + appState.newCSVLength + ' OCL: ' + appState.oldCSVLength);
			
			// If new, for first load
			if (appState.newCSVLength === 0 ){
				createList(d);
				// set new to current length
				appState.newCSVLength = appState.current_data.length;
				// set old to new to not add any new data
				appState.oldCSVLength = appState.newCSVLength;
				// auto scroll
				$("div#dump ul").animate({ scrollTop: $("div#dump ul")[0].scrollHeight }, "slow");
			}

			appState.newCSVLength = appState.current_data.length;

			// FIND NEW MESSAGES AND APPEND THEM
			if ( appState.newCSVLength > appState.oldCSVLength) {
				console.log('STATUS=> appending...')

				// Ques up messages so they don't go missing and get displayed in order
				var diff = appState.newCSVLength - appState.oldCSVLength;
				for (var i = 0; i < diff; i++ ){
					//Setting up data
					var rowArray = appState.current_data[appState.oldCSVLength - 1].split(',')

					if ( rowArray[1] === "STATUS") {
						$('#dump > ul > li:last-child').after('<li class="red">' + appState.count
						 + " : " + rowArray[0] + ' | ' + rowArray[1] + ' : ' + rowArray[2]
						 + '</li>');
					} else {
						$('#dump > ul > li:last-child').after('<li class="green">' + appState.count
						 + " : " + rowArray[0] + ' | ' + rowArray[1] + ' : ' + rowArray[2]
						 + '</li>');
					}


					appState.oldCSVLength += 1;
					appState.count += 1;
					
				}
				$("div#dump ul").animate({ scrollTop: $("div#dump ul")[0].scrollHeight }, "slow");

			} else {
				console.log('STATUS=> not gonna append.')
			}
		});
	}

	function createList(data){
		var allRows = data.split(/\r?\n|\r/);
		var list = '<ul class="chat-window list-group">';
		for (var i = 0; i < allRows.length; i++){
			var rowArray = allRows[i].split(',')

			if ( rowArray[1] === "STATUS") {
				list += '<li class="red">' + rowArray[0] + ' | ' + rowArray[1] + ' : ' + rowArray[2] + '</li>'
			} else {
				list += '<li class="green">' + rowArray[0] + ' | ' + rowArray[1] + ' : ' + rowArray[2] + '</li>'
			}
		}

		list += '</ul>'

		$('#dump').append(list)	
	}

	function parseCSV(data) {
		//creates array
		return data.split(/\r?\n|\r/);
	}

	function postToCSV(text) {
		$.ajax({
		  type: "POST",
		  url: "/<%= @user %>/message",
		  data: {message: text}
		}).done(function(d){
			appState.oldCSVLength = appState.newCSVLength
			console.log('STATUS=> posted to csv'); 	
		});

	}
	
</script>